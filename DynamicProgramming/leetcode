class Solution {
public:
    int sol (int n , vector<int> &a, int curr, int prev, vector <vector<int>> &dp){
        //base case
        if(curr==n){
            return 0;
        }
        if(dp[curr][prev+1]!=-1)
            return dp[curr][prev+1];

        int take=0;
        if(prev==-1 || a[curr]>a[prev])
        //prev +1 == curr and curr becomes curr+1
        take =1+sol(n,a,curr+1,curr,dp);

        int exclude= 0+sol(n,a, curr+1,prev,dp );

            return dp[curr][prev+1]=max(take, exclude);
    }

    ////////////////////////////////////////////
    int lengthOfLIS(vector<int> &nums) { 
        int n =nums.size();
        vector<vector<int>> vect(n, vector<int> (n+1,-1));
 
        return sol(n,nums,0,-1, vect) ;
    }
};